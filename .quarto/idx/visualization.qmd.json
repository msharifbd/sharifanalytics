{"title":"Data Visualization","markdown":{"yaml":{"title":"Data Visualization","format":"html"},"headingText":"Learning Objectives of the Chapter","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n\n::: {style=\"text-align: justify\"}\nAt the End of the Chapter, Students should be Able to -\n\n-   Learn about the Meaning of Visualization\n\n-   Understand the Importance of Visualization\n\n-   Learn about Different R and Python Packages for Visualization\n\n-   Gain Knowledge about Different Types of Visualization\n\n-   Learn Knowledge on Interactive Visualization\n:::\n\n## What is Visualization?\n\n::: {style=\"text-align: justify\"}\n     To learn more about different kinds of visualization in `R`, you should visit - <https://r-graph-gallery.com/> and <https://www.kaggle.com/code/ruchiraperera/seaborn-vs-plotly-express>.\n:::\n\n## Importance of Visualization\n\n## Visualization Packages in R and Python\n\n::: panel-tabset\n## R\n\n::: {style=\"text-align: justify\"}\n     `ggplot2` is a powerful package for visualization in `R`. In addition, some other packages enhance the functionalities of `ggplot2`. These packages include - `gganimate`, `ggthemes`, `ggpubr`, `ggridges`, `ggmap`, `ggrepel`, `ggextra`, `ggpattern`, `ggcorrplot` and so on.\n:::\n\n```{r}\n#| warning: false\n# Loading tidyverse package\nlibrary(tidyverse)\n# Loading dataset \ntips = read_csv(\n    'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/tips.csv'\n)\n```\n\n## Python\n\n::: {style=\"text-align: justify\"}\n     In `Python`, `matplotlib` and `seaborn` are two of the powerful packages for visualization. Additionally, `plotly`, `plotnine`, `altair`, and `bokeh` are some other python packages that enhances visualization in python.\n:::\n\n```{r}\n#| include: false\nlibrary(reticulate)\nSys.setenv('RETICULATE_PYTHON' = 'C:\\\\Users\\\\mshar\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python311\\\\python.exe')\n\n#Sys.setenv('RETICULATE_PYTHON' = '~/.venv/quarto_book_python/Scripts/python.exe')\n```\n\n```{python}\n# Loading Necessary Python Packages \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\n```\n\n```{python}\n# ggplot style \nplt.style.use('ggplot')\n# Loading dataset\ntips = sns.load_dataset('tips')\n```\n:::\n\n## ggplot - Grammar of Graphics\n\n::: {style=\"text-align: justify\"}\n     In `ggplot`, a plot consists of at least four elements -\n\n1.  Data - the data frame\n\n2.  Aesthetic Mappings - aesthetic mappings map variable from the data frame to different kinds of aesthetics such as x coordinate, y coordinate, color, shape, size and so on.\n\n3.  Coordinate System - the positioning of points\n\n4.  Geom - geoms are geometirc objects such as points or lines.\n\n     You can also use [cheatsheet](https://posit.co/resources/cheatsheets/) of ggplot to know more about the ggplot. Another good source to learn more about visualization in `R` is [The R Graph Library](https://r-graph-gallery.com/). Similarly, for `Python`, you can use [The Python Graph Library](https://python-graph-gallery.com/).\n:::\n\n## Types of Visualization\n\n### Bar Diagram (Bar Plot)\n\n#### One Categorical Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n#| fig-cap: \"Bar Plot of Gender (geom_bar)\"\ntips |> \n    count (sex) |>\n    ggplot(mapping = aes(x = sex, y = n))+\n    geom_bar(stat = 'identity', width = 0.5, fill = \"orangered3\") + \n    labs(x = 'Sex', y = 'Total Observations')\n```\n\n      Either of the the following code will also produce the same visualization.\n\n```{r}\n#| eval: false \n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |> \n    ggplot(mapping = aes(x = sex))+\n    geom_bar(width = 0.5, fill = \"maroon\") + \n    labs(x = 'Sex', y = 'Total Observations')\n```\n\n```{r}\n#| eval: false \n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |> \n    ggplot(mapping = aes(x = sex))+\n    stat_count(width = 0.5, fill = \"maroon\") + \n    labs(x = 'Sex', y = 'Total Observations')\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-cap: \"Bar Plot of Gender (sns.countplot)\"\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\nsns.countplot(data = tips, x = \"sex\", width=0.5)\nplt.xlabel('Sex')\nplt.ylabel('Total Observations')\n```\n:::\n\n#### One Categorical Variable and One Continuous Variable\n\n::: {style=\"text-align: justify\"}\n     Barplot can also be used for two variables - both discrete (categorical) variables or one discrete (categorical) and one continuous variable. Below is bar plot for one discrete (categorical) and one continuous variable.\n:::\n\n::: panel-tabset\n## R\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    group_by(sex) |>\n    summarize(total_bill = mean(total_bill)) |>\n    ggplot(aes(x = sex, y = total_bill)) + \n    geom_col(width =0.6, fill = \"pink\") + \n    labs(x = \"Sex\", y = \"Total Bill\") + \n    geom_text(aes(label = round(total_bill,2)), vjust = -0.2)\n```\n\n     The following code will produce the same results.\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    ggplot(mapping = aes(x = sex, y = total_bill))+\n    geom_bar(stat = 'summary', fun = \"mean\", position = \"dodge\",\n    width = 0.60, fill = \"pink\") + \n    labs(x = \"Sex\", y = \"Total Bill\")\n```\n\n## Python\n\n```{python}\n#| fig-cap: \"Bar Plot of Gender (sns.barplot)\"\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.barplot(data = tips, x = \"sex\", y = \"total_bill\",\n            width= 0.5, \n            errorbar= None)\nplt.xlabel('Sex')\nplt.ylabel('Total Bill')\n```\n\n     The following code will add text value on the bars in barplot.\n\n```{python}\n#| eval: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nax = sns.barplot(data = tips, x = \"sex\", y = \"total_bill\",\n            width= 0.5, \n            errorbar= None)\n\nfor i in ax.containers:\n    ax.bar_label(i,)\n\nplt.xlabel('Sex')\nplt.ylabel('Total Bill')\n```\n:::\n\n#### Two Categorical Variables\n\n     Below is a bar plot for both discrete (categorical) variables.\n\n::: panel-tabset\n## R\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n#| fig-cap: \"Bar Plot of Gender (geom_bar - unstacking bar)\"\ntips |> \n    count (sex, day) |>\n    ggplot(mapping = aes(x = sex, y = n, fill = day))+\n    geom_bar(stat = 'identity', position = \"dodge\") + \n    labs(x = \"Sex\", y = \"Total Observations\")\n```\n\n     The following code will also produce the same visualization.\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    #count (sex, day) |>\n    ggplot(mapping = aes(x = sex, fill = day))+\n    geom_bar(stat = 'count', position = \"dodge\") + \n    labs(x = \"Sex\", y = \"Total Observations\"\n         ,fill = \"Day\"\n    )\n```\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    count (sex, day) |>\n    ggplot(mapping = aes(x = sex, y = n, fill = day))+\n    geom_bar(stat = 'identity', position = \"stack\") + # position = \"fill\"\n    labs(x = \"Sex\", y = \"Total Observations\")\n```\n\n     The following code will also produce the same visualization.\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    #count (sex, day) |>\n    ggplot(mapping = aes(x = sex, fill = day))+\n    geom_bar(stat = 'count', position = \"stack\") + # position = \"fill\"\n    labs(x = \"Sex\", y = \"Total Observations\"\n         ,fill = \"Day\"\n    )\n```\n\n## Python\n\n```{python}\n#| fig-cap: \"Bar Plot of Gender (sns.countplot - unstacking bar)\"\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.countplot(data = tips, x = \"sex\", hue = \"day\")\nplt.xlabel('Sex')\nplt.ylabel('Total Observations')\n```\n\n     Stacked barchart cannot be created using `seaborn`. So, we use alternatives -\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips[['sex', 'day']].value_counts().reset_index() \\\n    .pivot(index = \"sex\", columns = \"day\", values = 'count') \\\n    .plot(kind = \"bar\", stacked = True)\nplt.xticks(rotation = 360)\nplt.xlabel(\"Sex\")\nplt.ylabel(\"Total Observations\")\nplt.legend(loc = \"upper right\")\n```\n:::\n\n### Histogram\n\n#### One Continuous Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill))+\n    geom_histogram(binwidth = 2.25, fill = \"orangered3\") + \n    labs(x = \"Total Bill\", y = \"Count\") \n```\n\n     The following code will generate the same results with a little modification -\n\n```{r}\n#| eval: false \n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill))+\n    geom_histogram(binwidth = 2.25, fill = \"orangered3\", col = \"white\") + \n    labs(x = \"Total Bill\", y = \"Count\")\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.histplot(data = tips, x = \"total_bill\", binwidth=2.25)\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Count\")\n```\n:::\n\n#### One Continuous and One Categorical Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, fill = sex))+\n    geom_histogram(binwidth = 2.25)+\n    labs(x = \"Total Bill\")\n\n```\n\n     The following code will generate the same results -\n\n```{r}\n#| eval: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |>\n    ggplot(aes(x = total_bill, color = sex))+\n    geom_histogram(binwidth = 2.25)\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.histplot(data = tips, x = \"total_bill\", hue = \"sex\", binwidth=2.25)\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Count\")\n```\n\n```{python}\n#| warning: false\n#| eval: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.FacetGrid(data=tips, col=\"sex\") \\\n    .map(sns.histplot, \"total_bill\", binwidth = 2.25)\n```\n:::\n\n### Density Plot\n\n#### One Continuous Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |>\n    ggplot(aes(x = total_bill))+\n    geom_density( size = 1, color = \"orangered3\"\n        #adjust = 0.2\n    ) + \n    labs(x = \"Total Bill\", y = \"Density\")\n\n\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\nsns.kdeplot(data = tips, x = \"total_bill\"\n            #,bw_adjust = 0.20\n            )\nplt.xlabel(\"Total Bill\")\n```\n:::\n\n#### Two Continuous Variables\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    select(1:2) |>\n    pivot_longer(cols = everything(), names_to = \"types\", values_to = \"values\") |>\n    ggplot(aes(x = values, col = types))+\n    geom_density(size = 1)\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.kdeplot(data = tips[['total_bill', 'tip']])\nplt.xlabel(\"Total Bill\")\n```\n:::\n\n#### One Continuous Variable and One Categorical Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, fill = sex))+\n    geom_density(\n        #adjust = 0.2\n    )+ \n    labs(x = \"Total Bill\", y = \"Density\")\n```\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, color = sex))+\n    geom_density(size = 1\n        #adjust = 0.2\n    )+ \n    labs(x = \"Total Bill\", y = \"Density\")\n\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.kdeplot(data = tips, x = \"total_bill\", hue = \"sex\")\nplt.xlabel(\"Total Bill\")\n```\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.kdeplot(data = tips, x = \"total_bill\", hue = \"sex\", multiple = \"stack\")\nplt.xlabel(\"Total Bill\")\n```\n:::\n\n### Point Plot\n\n#### One Categorical and One Continuous Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n#| fig-cap: \"Line Plot of Gender (geom_line - mean)\"\ntips |> \n    ggplot(aes(x = sex, y = total_bill, group = 1)) + \n    stat_summary(aes(sex, total_bill), geom = \"point\", fun.y = mean, size = 2, col = \"red\")+\n    stat_summary(aes(sex, total_bill), geom = \"line\", fun.y = mean, size = 1.5, col = \"red\",size = 2.1) + \n    labs(x = \"Sex\", y = \"Total Bill\")\n```\n\n     The following code will also produce the same visualization.\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    group_by(sex) |>\n    summarize(total_bill = mean(total_bill)) |>\n    ggplot(aes(x = sex, y = total_bill, group = 1)) + \n    geom_point(col = \"red\", size = 2)+\n    geom_line(col = \"red\", size = 2.1) + \n    labs(x = \"Sex\", y = \"Total Bill\")\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.pointplot(data = tips, x = \"sex\", y = \"total_bill\", errorbar=None)\nplt.xlabel('Sex')\nplt.ylabel(\"Total Bill\")\n```\n:::\n\n#### Two Categorical Variables and One Continuous Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |>\n    ggplot(aes(x = sex, y = total_bill, group = smoker, color = smoker)) + \n    stat_summary(aes(x = sex, y = total_bill), geom = \"point\", fun.y = mean) + \n    stat_summary(aes(x = sex, y = total_bill), geom = \"line\", fun.y = mean, size = 1.1) + \n    labs(x = \"Sex\", y = \"Total Bill\" #, color = \"Smoker\"\n    )\n```\n\n     The following code will also produce the same visualization.\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    group_by(sex, smoker) |>\n    summarize( total_bill = mean(total_bill)) |>\n    ggplot(aes(x = sex, y = total_bill, group = smoker , color = smoker)) + \n    geom_point()+\n    geom_line(size = 1.1)+\n    labs(x = \"Sex\", y = \"Total Bill\")\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.pointplot(data = tips, x = \"sex\", y = \"total_bill\", \n              hue = \"smoker\", errorbar= None)\nplt.xlabel(\"Sex\")\nplt.ylabel(\"Total Bill\")\n```\n:::\n\n### Box Plot\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = sex, y = total_bill))+\n    geom_boxplot(fill = \"pink\") + \n    labs (x = \"Sex\", y = \"Total Bill\")\n```\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = sex, y = total_bill))+\n    geom_boxplot(fill = \"pink\") + \n    labs (x = \"Sex\", y = \"Total Bill\") + \n    facet_wrap(~smoker)\n\ntips |>\n    ggplot(aes(x = sex, y = total_bill))+\n    geom_boxplot(fill = \"pink\") + \n    labs (x = \"Sex\", y = \"Total Bill\") + \n    facet_grid(time~smoker)\n\n\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.boxplot(data = tips, x = \"sex\", y = \"total_bill\", color = \"pink\")\nplt.xlabel(\"Sex\")\nplt.ylabel(\"Total Bill\")\n```\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.catplot(data = tips, x = \"sex\", y = \"total_bill\", \n            color = \"pink\", kind = \"box\", row = \"smoker\"\n           )\n```\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.catplot(data = tips, x = \"sex\", y = \"total_bill\", \n            color = \"pink\", kind = \"box\", row = \"smoker\"\n            ,col = \"time\"\n           )\n```\n:::\n\n### Scatter Plot\n\n::: panel-tabset\n## R\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, y = tip))+\n    geom_point(col = \"blue\")+\n    labs(x = \"Total Bill\", y = \"Tip\")\n\n```\n\n## Python\n\n```{python}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.scatterplot(data = tips, x = \"total_bill\", y = \"tip\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n```\n:::\n\n### Regression Plot\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false \n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, y = tip))+\n    geom_point(col = \"blue\")+\n    geom_smooth(method = \"lm\", col = \"orange\") + \n    labs(x = \"Total Bill\", y = \"Tip\")\n\n```\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 8\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, y = tip, col = sex))+\n    geom_point(col = \"blue\")+\n    geom_smooth(method = \"lm\") + \n    labs(x = \"Total Bill\", y = \"Tip\")\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 8\n#| out-width: \"90%\"\nsns.lmplot(data = tips, x = \"total_bill\", y = \"tip\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n```\n\n```{python}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.regplot(data = tips, x = \"total_bill\", y = \"tip\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n```\n\n```{python}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.lmplot(data = tips, x = \"total_bill\", y = \"tip\", hue = \"sex\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n```\n:::\n\n::: {style=\"text-align: justify\"}\n## Exercises \\# 01\n\n1.  Download student data from the [url](https://raw.githubusercontent.com/ShapeLab/ZooidsCompositePhysicalizations/refs/heads/master/Zooid_Vis/bin/data/student-dataset.csv) and create a pointplot (lineplot) of students average math score (`math.grade`) of gender (`gender`). Please note that the variable `gender` includes a label called `other` in addition to `M` and `F`; you should filter out obsevations of the label `other` before you create visualization.\n\n2.  From the dataset in above (question 1), compare, using pointplot (lineplot), the average math (`math.grade`) and science score (`sciences.grade`) of different students based on gender (`gender`). You might need to use `pivot_longer` function to reshape the data frame before visualizing the relation.\n:::\n\n::: {style=\"text-align: justify\"}\n## Interactive Visualization\n\n::: {style=\"text-align: justify\"}\n     Interactive Visualization involves graphical presentation of data that permits users to engage with the visual elements directly. Unlike static visulization, interactive visualization allows users to manipulate data, explore different aspects, and customize the visualization in real time. The primary objective of interactive visualization is to make data exploration more intuititve and dynamic. The benefits of interactive visualzation include - enhaned engagement, deeper insights, customization, and exploration and discovery.\n:::\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\nlibrary(plotly)\n```\n\n```{r}\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\n\np = ggplot(data = tips, aes(x = sex)) + \n    geom_bar(width = 0.5, fill = \"orangered3\") + \n    labs(x = \"Gender\", y = \"Total Observations\")\n\nggplotly(p)\n```\n\n```{r}\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\n\np2 = tips |>\n    ggplot(aes(x = time, y = total_bill, group = smoker, color = smoker))+\n    stat_summary(aes(x = time, y = total_bill), geom = \"point\", fun.y = mean) + \n    stat_summary(aes(x = time, y = total_bill), geom = \"line\", fun.y = mean, size = 1.1) + \n    labs (x = \"Time\", y = \"Total Bill\")\n\nggplotly(p2)\n```\n\n## Python\n\n```{python}\n#| warning: false\nimport plotly.express as px\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\n\nfig = px.histogram(tips, x = \"sex\") \\\n    .update_traces(marker_color = \"orangered\") \\\n    .update_xaxes(title = \"Sex\") \\\n    .update_yaxes(title = \"Count\")\nfig.show()\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\npx.histogram(tips, x = \"sex\", y = \"total_bill\",histfunc='avg') \\\n    .update_traces(marker_color = \"orangered\") \\\n    .update_xaxes(title = \"Sex\") \\\n    .update_yaxes(title = \"Average Total Bill\") \\\n    .show()\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\npx.histogram(tips, x=\"total_bill\",histnorm='probability density',\n             width=600, height=400) \\\n                .update_xaxes(title = \"Total Bill\") \\\n                .update_yaxes(title =\"Density\")\n```\n\n## Plotnine\n\n```{python}\n#| warning: false\n#import plotnine as p9\nfrom plotnine import *\nimport plotly.tools as tls\n\ndf = tips.groupby([\"sex\"])[\"total_bill\"].agg('mean').reset_index()\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\n(\n    ggplot(df, aes(x = \"sex\", y = \"total_bill\", group = 1)) + \n    geom_point(color = \"blue\")+\n    geom_line(color = \"orange\", size = 1.1) + \n    labs(x = \"Sex\", y = \"Average Total Bill\")\n)\n\nplotly_fig = (\n    ggplot(df, aes(x = \"sex\", y = \"total_bill\", group = 1)) + \n    geom_point(color = \"blue\")+\n    geom_line(color = \"orange\", size = 1.1)\n)\ntls.mpl_to_plotly(plotly_fig.draw()).show()\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\ndf2 = tips.groupby([\"sex\", \"smoker\"])[\"total_bill\"] \\\n    .agg('mean') \\\n    .round(2) \\\n    .reset_index()\n\n(\n    ggplot(df2, aes(x = \"sex\", y = \"total_bill\",  group = \"smoker\", color = \"smoker\")) + \n    geom_point()+\n    geom_line(size = 1.1) + \n    labs(x = \"Sex\", y = \"Average Total Bill\")\n)\n\n```\n:::\n:::\n\n::: {style=\"text-align: justify\"}\n## Exercises \\# 02\n:::","srcMarkdownNoYaml":"\n\n### Learning Objectives of the Chapter {.unnumbered}\n\n::: {style=\"text-align: justify\"}\nAt the End of the Chapter, Students should be Able to -\n\n-   Learn about the Meaning of Visualization\n\n-   Understand the Importance of Visualization\n\n-   Learn about Different R and Python Packages for Visualization\n\n-   Gain Knowledge about Different Types of Visualization\n\n-   Learn Knowledge on Interactive Visualization\n:::\n\n## What is Visualization?\n\n::: {style=\"text-align: justify\"}\n     To learn more about different kinds of visualization in `R`, you should visit - <https://r-graph-gallery.com/> and <https://www.kaggle.com/code/ruchiraperera/seaborn-vs-plotly-express>.\n:::\n\n## Importance of Visualization\n\n## Visualization Packages in R and Python\n\n::: panel-tabset\n## R\n\n::: {style=\"text-align: justify\"}\n     `ggplot2` is a powerful package for visualization in `R`. In addition, some other packages enhance the functionalities of `ggplot2`. These packages include - `gganimate`, `ggthemes`, `ggpubr`, `ggridges`, `ggmap`, `ggrepel`, `ggextra`, `ggpattern`, `ggcorrplot` and so on.\n:::\n\n```{r}\n#| warning: false\n# Loading tidyverse package\nlibrary(tidyverse)\n# Loading dataset \ntips = read_csv(\n    'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/tips.csv'\n)\n```\n\n## Python\n\n::: {style=\"text-align: justify\"}\n     In `Python`, `matplotlib` and `seaborn` are two of the powerful packages for visualization. Additionally, `plotly`, `plotnine`, `altair`, and `bokeh` are some other python packages that enhances visualization in python.\n:::\n\n```{r}\n#| include: false\nlibrary(reticulate)\nSys.setenv('RETICULATE_PYTHON' = 'C:\\\\Users\\\\mshar\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python311\\\\python.exe')\n\n#Sys.setenv('RETICULATE_PYTHON' = '~/.venv/quarto_book_python/Scripts/python.exe')\n```\n\n```{python}\n# Loading Necessary Python Packages \nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\n```\n\n```{python}\n# ggplot style \nplt.style.use('ggplot')\n# Loading dataset\ntips = sns.load_dataset('tips')\n```\n:::\n\n## ggplot - Grammar of Graphics\n\n::: {style=\"text-align: justify\"}\n     In `ggplot`, a plot consists of at least four elements -\n\n1.  Data - the data frame\n\n2.  Aesthetic Mappings - aesthetic mappings map variable from the data frame to different kinds of aesthetics such as x coordinate, y coordinate, color, shape, size and so on.\n\n3.  Coordinate System - the positioning of points\n\n4.  Geom - geoms are geometirc objects such as points or lines.\n\n     You can also use [cheatsheet](https://posit.co/resources/cheatsheets/) of ggplot to know more about the ggplot. Another good source to learn more about visualization in `R` is [The R Graph Library](https://r-graph-gallery.com/). Similarly, for `Python`, you can use [The Python Graph Library](https://python-graph-gallery.com/).\n:::\n\n## Types of Visualization\n\n### Bar Diagram (Bar Plot)\n\n#### One Categorical Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n#| fig-cap: \"Bar Plot of Gender (geom_bar)\"\ntips |> \n    count (sex) |>\n    ggplot(mapping = aes(x = sex, y = n))+\n    geom_bar(stat = 'identity', width = 0.5, fill = \"orangered3\") + \n    labs(x = 'Sex', y = 'Total Observations')\n```\n\n      Either of the the following code will also produce the same visualization.\n\n```{r}\n#| eval: false \n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |> \n    ggplot(mapping = aes(x = sex))+\n    geom_bar(width = 0.5, fill = \"maroon\") + \n    labs(x = 'Sex', y = 'Total Observations')\n```\n\n```{r}\n#| eval: false \n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |> \n    ggplot(mapping = aes(x = sex))+\n    stat_count(width = 0.5, fill = \"maroon\") + \n    labs(x = 'Sex', y = 'Total Observations')\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-cap: \"Bar Plot of Gender (sns.countplot)\"\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\nsns.countplot(data = tips, x = \"sex\", width=0.5)\nplt.xlabel('Sex')\nplt.ylabel('Total Observations')\n```\n:::\n\n#### One Categorical Variable and One Continuous Variable\n\n::: {style=\"text-align: justify\"}\n     Barplot can also be used for two variables - both discrete (categorical) variables or one discrete (categorical) and one continuous variable. Below is bar plot for one discrete (categorical) and one continuous variable.\n:::\n\n::: panel-tabset\n## R\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    group_by(sex) |>\n    summarize(total_bill = mean(total_bill)) |>\n    ggplot(aes(x = sex, y = total_bill)) + \n    geom_col(width =0.6, fill = \"pink\") + \n    labs(x = \"Sex\", y = \"Total Bill\") + \n    geom_text(aes(label = round(total_bill,2)), vjust = -0.2)\n```\n\n     The following code will produce the same results.\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    ggplot(mapping = aes(x = sex, y = total_bill))+\n    geom_bar(stat = 'summary', fun = \"mean\", position = \"dodge\",\n    width = 0.60, fill = \"pink\") + \n    labs(x = \"Sex\", y = \"Total Bill\")\n```\n\n## Python\n\n```{python}\n#| fig-cap: \"Bar Plot of Gender (sns.barplot)\"\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.barplot(data = tips, x = \"sex\", y = \"total_bill\",\n            width= 0.5, \n            errorbar= None)\nplt.xlabel('Sex')\nplt.ylabel('Total Bill')\n```\n\n     The following code will add text value on the bars in barplot.\n\n```{python}\n#| eval: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nax = sns.barplot(data = tips, x = \"sex\", y = \"total_bill\",\n            width= 0.5, \n            errorbar= None)\n\nfor i in ax.containers:\n    ax.bar_label(i,)\n\nplt.xlabel('Sex')\nplt.ylabel('Total Bill')\n```\n:::\n\n#### Two Categorical Variables\n\n     Below is a bar plot for both discrete (categorical) variables.\n\n::: panel-tabset\n## R\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n#| fig-cap: \"Bar Plot of Gender (geom_bar - unstacking bar)\"\ntips |> \n    count (sex, day) |>\n    ggplot(mapping = aes(x = sex, y = n, fill = day))+\n    geom_bar(stat = 'identity', position = \"dodge\") + \n    labs(x = \"Sex\", y = \"Total Observations\")\n```\n\n     The following code will also produce the same visualization.\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    #count (sex, day) |>\n    ggplot(mapping = aes(x = sex, fill = day))+\n    geom_bar(stat = 'count', position = \"dodge\") + \n    labs(x = \"Sex\", y = \"Total Observations\"\n         ,fill = \"Day\"\n    )\n```\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    count (sex, day) |>\n    ggplot(mapping = aes(x = sex, y = n, fill = day))+\n    geom_bar(stat = 'identity', position = \"stack\") + # position = \"fill\"\n    labs(x = \"Sex\", y = \"Total Observations\")\n```\n\n     The following code will also produce the same visualization.\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    #count (sex, day) |>\n    ggplot(mapping = aes(x = sex, fill = day))+\n    geom_bar(stat = 'count', position = \"stack\") + # position = \"fill\"\n    labs(x = \"Sex\", y = \"Total Observations\"\n         ,fill = \"Day\"\n    )\n```\n\n## Python\n\n```{python}\n#| fig-cap: \"Bar Plot of Gender (sns.countplot - unstacking bar)\"\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.countplot(data = tips, x = \"sex\", hue = \"day\")\nplt.xlabel('Sex')\nplt.ylabel('Total Observations')\n```\n\n     Stacked barchart cannot be created using `seaborn`. So, we use alternatives -\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips[['sex', 'day']].value_counts().reset_index() \\\n    .pivot(index = \"sex\", columns = \"day\", values = 'count') \\\n    .plot(kind = \"bar\", stacked = True)\nplt.xticks(rotation = 360)\nplt.xlabel(\"Sex\")\nplt.ylabel(\"Total Observations\")\nplt.legend(loc = \"upper right\")\n```\n:::\n\n### Histogram\n\n#### One Continuous Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill))+\n    geom_histogram(binwidth = 2.25, fill = \"orangered3\") + \n    labs(x = \"Total Bill\", y = \"Count\") \n```\n\n     The following code will generate the same results with a little modification -\n\n```{r}\n#| eval: false \n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill))+\n    geom_histogram(binwidth = 2.25, fill = \"orangered3\", col = \"white\") + \n    labs(x = \"Total Bill\", y = \"Count\")\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.histplot(data = tips, x = \"total_bill\", binwidth=2.25)\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Count\")\n```\n:::\n\n#### One Continuous and One Categorical Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, fill = sex))+\n    geom_histogram(binwidth = 2.25)+\n    labs(x = \"Total Bill\")\n\n```\n\n     The following code will generate the same results -\n\n```{r}\n#| eval: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |>\n    ggplot(aes(x = total_bill, color = sex))+\n    geom_histogram(binwidth = 2.25)\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.histplot(data = tips, x = \"total_bill\", hue = \"sex\", binwidth=2.25)\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Count\")\n```\n\n```{python}\n#| warning: false\n#| eval: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.FacetGrid(data=tips, col=\"sex\") \\\n    .map(sns.histplot, \"total_bill\", binwidth = 2.25)\n```\n:::\n\n### Density Plot\n\n#### One Continuous Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |>\n    ggplot(aes(x = total_bill))+\n    geom_density( size = 1, color = \"orangered3\"\n        #adjust = 0.2\n    ) + \n    labs(x = \"Total Bill\", y = \"Density\")\n\n\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\nsns.kdeplot(data = tips, x = \"total_bill\"\n            #,bw_adjust = 0.20\n            )\nplt.xlabel(\"Total Bill\")\n```\n:::\n\n#### Two Continuous Variables\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    select(1:2) |>\n    pivot_longer(cols = everything(), names_to = \"types\", values_to = \"values\") |>\n    ggplot(aes(x = values, col = types))+\n    geom_density(size = 1)\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.kdeplot(data = tips[['total_bill', 'tip']])\nplt.xlabel(\"Total Bill\")\n```\n:::\n\n#### One Continuous Variable and One Categorical Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, fill = sex))+\n    geom_density(\n        #adjust = 0.2\n    )+ \n    labs(x = \"Total Bill\", y = \"Density\")\n```\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, color = sex))+\n    geom_density(size = 1\n        #adjust = 0.2\n    )+ \n    labs(x = \"Total Bill\", y = \"Density\")\n\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.kdeplot(data = tips, x = \"total_bill\", hue = \"sex\")\nplt.xlabel(\"Total Bill\")\n```\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.kdeplot(data = tips, x = \"total_bill\", hue = \"sex\", multiple = \"stack\")\nplt.xlabel(\"Total Bill\")\n```\n:::\n\n### Point Plot\n\n#### One Categorical and One Continuous Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n#| fig-cap: \"Line Plot of Gender (geom_line - mean)\"\ntips |> \n    ggplot(aes(x = sex, y = total_bill, group = 1)) + \n    stat_summary(aes(sex, total_bill), geom = \"point\", fun.y = mean, size = 2, col = \"red\")+\n    stat_summary(aes(sex, total_bill), geom = \"line\", fun.y = mean, size = 1.5, col = \"red\",size = 2.1) + \n    labs(x = \"Sex\", y = \"Total Bill\")\n```\n\n     The following code will also produce the same visualization.\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |> \n    group_by(sex) |>\n    summarize(total_bill = mean(total_bill)) |>\n    ggplot(aes(x = sex, y = total_bill, group = 1)) + \n    geom_point(col = \"red\", size = 2)+\n    geom_line(col = \"red\", size = 2.1) + \n    labs(x = \"Sex\", y = \"Total Bill\")\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.pointplot(data = tips, x = \"sex\", y = \"total_bill\", errorbar=None)\nplt.xlabel('Sex')\nplt.ylabel(\"Total Bill\")\n```\n:::\n\n#### Two Categorical Variables and One Continuous Variable\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\n\ntips |>\n    ggplot(aes(x = sex, y = total_bill, group = smoker, color = smoker)) + \n    stat_summary(aes(x = sex, y = total_bill), geom = \"point\", fun.y = mean) + \n    stat_summary(aes(x = sex, y = total_bill), geom = \"line\", fun.y = mean, size = 1.1) + \n    labs(x = \"Sex\", y = \"Total Bill\" #, color = \"Smoker\"\n    )\n```\n\n     The following code will also produce the same visualization.\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    group_by(sex, smoker) |>\n    summarize( total_bill = mean(total_bill)) |>\n    ggplot(aes(x = sex, y = total_bill, group = smoker , color = smoker)) + \n    geom_point()+\n    geom_line(size = 1.1)+\n    labs(x = \"Sex\", y = \"Total Bill\")\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.pointplot(data = tips, x = \"sex\", y = \"total_bill\", \n              hue = \"smoker\", errorbar= None)\nplt.xlabel(\"Sex\")\nplt.ylabel(\"Total Bill\")\n```\n:::\n\n### Box Plot\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = sex, y = total_bill))+\n    geom_boxplot(fill = \"pink\") + \n    labs (x = \"Sex\", y = \"Total Bill\")\n```\n\n```{r}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = sex, y = total_bill))+\n    geom_boxplot(fill = \"pink\") + \n    labs (x = \"Sex\", y = \"Total Bill\") + \n    facet_wrap(~smoker)\n\ntips |>\n    ggplot(aes(x = sex, y = total_bill))+\n    geom_boxplot(fill = \"pink\") + \n    labs (x = \"Sex\", y = \"Total Bill\") + \n    facet_grid(time~smoker)\n\n\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.boxplot(data = tips, x = \"sex\", y = \"total_bill\", color = \"pink\")\nplt.xlabel(\"Sex\")\nplt.ylabel(\"Total Bill\")\n```\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.catplot(data = tips, x = \"sex\", y = \"total_bill\", \n            color = \"pink\", kind = \"box\", row = \"smoker\"\n           )\n```\n\n```{python}\n#| warning: false\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.catplot(data = tips, x = \"sex\", y = \"total_bill\", \n            color = \"pink\", kind = \"box\", row = \"smoker\"\n            ,col = \"time\"\n           )\n```\n:::\n\n### Scatter Plot\n\n::: panel-tabset\n## R\n\n```{r}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, y = tip))+\n    geom_point(col = \"blue\")+\n    labs(x = \"Total Bill\", y = \"Tip\")\n\n```\n\n## Python\n\n```{python}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.scatterplot(data = tips, x = \"total_bill\", y = \"tip\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n```\n:::\n\n### Regression Plot\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false \n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, y = tip))+\n    geom_point(col = \"blue\")+\n    geom_smooth(method = \"lm\", col = \"orange\") + \n    labs(x = \"Total Bill\", y = \"Tip\")\n\n```\n\n```{r}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 8\n#| out-width: \"90%\"\ntips |>\n    ggplot(aes(x = total_bill, y = tip, col = sex))+\n    geom_point(col = \"blue\")+\n    geom_smooth(method = \"lm\") + \n    labs(x = \"Total Bill\", y = \"Tip\")\n```\n\n## Python\n\n```{python}\n#| warning: false\n#| fig-width: 10\n#| fig-height: 8\n#| out-width: \"90%\"\nsns.lmplot(data = tips, x = \"total_bill\", y = \"tip\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n```\n\n```{python}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.regplot(data = tips, x = \"total_bill\", y = \"tip\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n```\n\n```{python}\n#| fig-width: 8\n#| fig-height: 6\n#| out-width: \"90%\"\nsns.lmplot(data = tips, x = \"total_bill\", y = \"tip\", hue = \"sex\")\nplt.xlabel(\"Total Bill\")\nplt.ylabel(\"Tip\")\n```\n:::\n\n::: {style=\"text-align: justify\"}\n## Exercises \\# 01\n\n1.  Download student data from the [url](https://raw.githubusercontent.com/ShapeLab/ZooidsCompositePhysicalizations/refs/heads/master/Zooid_Vis/bin/data/student-dataset.csv) and create a pointplot (lineplot) of students average math score (`math.grade`) of gender (`gender`). Please note that the variable `gender` includes a label called `other` in addition to `M` and `F`; you should filter out obsevations of the label `other` before you create visualization.\n\n2.  From the dataset in above (question 1), compare, using pointplot (lineplot), the average math (`math.grade`) and science score (`sciences.grade`) of different students based on gender (`gender`). You might need to use `pivot_longer` function to reshape the data frame before visualizing the relation.\n:::\n\n::: {style=\"text-align: justify\"}\n## Interactive Visualization\n\n::: {style=\"text-align: justify\"}\n     Interactive Visualization involves graphical presentation of data that permits users to engage with the visual elements directly. Unlike static visulization, interactive visualization allows users to manipulate data, explore different aspects, and customize the visualization in real time. The primary objective of interactive visualization is to make data exploration more intuititve and dynamic. The benefits of interactive visualzation include - enhaned engagement, deeper insights, customization, and exploration and discovery.\n:::\n\n::: panel-tabset\n## R\n\n```{r}\n#| warning: false\nlibrary(plotly)\n```\n\n```{r}\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\n\np = ggplot(data = tips, aes(x = sex)) + \n    geom_bar(width = 0.5, fill = \"orangered3\") + \n    labs(x = \"Gender\", y = \"Total Observations\")\n\nggplotly(p)\n```\n\n```{r}\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\n\np2 = tips |>\n    ggplot(aes(x = time, y = total_bill, group = smoker, color = smoker))+\n    stat_summary(aes(x = time, y = total_bill), geom = \"point\", fun.y = mean) + \n    stat_summary(aes(x = time, y = total_bill), geom = \"line\", fun.y = mean, size = 1.1) + \n    labs (x = \"Time\", y = \"Total Bill\")\n\nggplotly(p2)\n```\n\n## Python\n\n```{python}\n#| warning: false\nimport plotly.express as px\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\n\nfig = px.histogram(tips, x = \"sex\") \\\n    .update_traces(marker_color = \"orangered\") \\\n    .update_xaxes(title = \"Sex\") \\\n    .update_yaxes(title = \"Count\")\nfig.show()\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\npx.histogram(tips, x = \"sex\", y = \"total_bill\",histfunc='avg') \\\n    .update_traces(marker_color = \"orangered\") \\\n    .update_xaxes(title = \"Sex\") \\\n    .update_yaxes(title = \"Average Total Bill\") \\\n    .show()\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\npx.histogram(tips, x=\"total_bill\",histnorm='probability density',\n             width=600, height=400) \\\n                .update_xaxes(title = \"Total Bill\") \\\n                .update_yaxes(title =\"Density\")\n```\n\n## Plotnine\n\n```{python}\n#| warning: false\n#import plotnine as p9\nfrom plotnine import *\nimport plotly.tools as tls\n\ndf = tips.groupby([\"sex\"])[\"total_bill\"].agg('mean').reset_index()\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\n(\n    ggplot(df, aes(x = \"sex\", y = \"total_bill\", group = 1)) + \n    geom_point(color = \"blue\")+\n    geom_line(color = \"orange\", size = 1.1) + \n    labs(x = \"Sex\", y = \"Average Total Bill\")\n)\n\nplotly_fig = (\n    ggplot(df, aes(x = \"sex\", y = \"total_bill\", group = 1)) + \n    geom_point(color = \"blue\")+\n    geom_line(color = \"orange\", size = 1.1)\n)\ntls.mpl_to_plotly(plotly_fig.draw()).show()\n```\n\n```{python}\n#| warning: false\n#| fig-width: 6\n#| fig-height: 4\n#| out-width: \"90%\"\ndf2 = tips.groupby([\"sex\", \"smoker\"])[\"total_bill\"] \\\n    .agg('mean') \\\n    .round(2) \\\n    .reset_index()\n\n(\n    ggplot(df2, aes(x = \"sex\", y = \"total_bill\",  group = \"smoker\", color = \"smoker\")) + \n    geom_point()+\n    geom_line(size = 1.1) + \n    labs(x = \"Sex\", y = \"Average Total Bill\")\n)\n\n```\n:::\n:::\n\n::: {style=\"text-align: justify\"}\n## Exercises \\# 02\n:::"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"visualization.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","jupyter":"python3","number-depth":5,"site-url":"https://analyticsforaccountingdata.netlify.app/","repo-url":"https://github.com/msharifbd/sharifanalytics","repo-actions":["edit","issue"],"repo-branch":"main","sharing":["twitter","facebook","linkedin"],"downloads":["pdf","epub"],"bibliography":["references.bib"],"editor":"visual","theme":"cosmo","mainfont":"Georgia, serif","callout-appearance":"default","title":"Data Visualization"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"pdf-book"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"block-headings":true,"jupyter":"python3","number-depth":5,"site-url":"https://analyticsforaccountingdata.netlify.app/","repo-url":"https://github.com/msharifbd/sharifanalytics","repo-actions":["edit","issue"],"repo-branch":"main","sharing":["twitter","facebook","linkedin"],"downloads":["pdf","epub"],"bibliography":["references.bib"],"editor":"visual","documentclass":"scrreprt","mainfont":"Times New Roman","sansfont":"Arial","monofont":"Courier New","colorlinks":true,"title":"Data Visualization"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}